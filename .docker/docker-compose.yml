services:

  zookeeper:
    image: wurstmeister/zookeeper
    ports: [ 2181:2181 ]

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on: [ zookeeper ]
    ports: [ 9092:9092 ]
    restart: always
    volumes: [ /var/run/docker.sock:/var/run/docker.sock ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "
        aap.aap-soknad-sendt.v1:1:1, \
        aap.sokere.v1:1:1, \
        aap.medlem.v1:1:1, \
        aap.manuell.v1:1:1, \
        aap.inntekter.v1:1:1"

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    restart: always
    ports: [ 8081:8081 ]
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081

  kafka-ui:
    image: obsidiandynamics/kafdrop
    container_name: kafka-ui
    depends_on: [ kafka, schema-registry ]
    ports: [ 9000:9000 ]
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081

  oauth2:
    image: ghcr.io/navikt/mock-oauth2-server:0.4.3
    container_name: oauth2
    ports: [ 8087:8080 ]
    volumes: [ './oauth2.json:/etc/oauth2.json' ]
    environment:
      JSON_CONFIG_PATH: /etc/oauth2.json

#  ksqldb:
#    image: confluentinc/ksqldb-server:0.23.1
#    container_name: ksqldb
#    ports: [ 8088:8088 ]
#    hostname: ksqldb
#    depends_on: [ kafka, schema-registry ]
#    environment:
#      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9093
#      KSQL_HOST_NAME: ksqldb
#      KSQL_LISTENERS: http://ksqldb:8088
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081

#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.23.1
#    container_name: ksqldb-cli
#    depends_on: [ kafka, ksqldb ]
#    entrypoint: /bin/sh
#    tty: true
